package BTAServerSolutions.BTAServerUtilities.mixin;

import BTAServerUtilities.utility.RoleBuilder;
import net.minecraft.core.entity.Entity;
import net.minecraft.core.entity.EntityLiving;
import net.minecraft.core.entity.player.EntityPlayer;
import net.minecraft.core.net.packet.Packet;
import net.minecraft.core.net.packet.Packet35EntityNickname;
import net.minecraft.server.entity.EntityTrackerEntry;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.Shadow;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Redirect;

//EntityPlayer Label Showing Roles. Currently limited by string cap

@Mixin(value = EntityTrackerEntry.class, remap = false)
public abstract class EntityTrackerEntryMixin {
	@Shadow
	public Entity trackedEntity;

	@Shadow
	public abstract void sendPacketToTrackedPlayersAndTrackedEntity(Packet packet);

	@Redirect(at = @At(ordinal = 2, value = "INVOKE", target = "Lnet/minecraft/server/entity/EntityTrackerEntry;sendPacketToTrackedPlayersAndTrackedEntity(Lnet/minecraft/core/net/packet/Packet;)V"), method = "tick")
	public void tick(EntityTrackerEntry instance, Packet packet) {
		if(trackedEntity instanceof EntityPlayer){
			this.sendPacketToTrackedPlayersAndTrackedEntity(new Packet35EntityNickname(this.trackedEntity.id, RoleBuilder.buildPlayerRoleDisplay((EntityPlayer) trackedEntity) + ((EntityLiving)this.trackedEntity).nickname, ((EntityLiving)this.trackedEntity).chatColor));
		} else {
			this.sendPacketToTrackedPlayersAndTrackedEntity(packet);
		}
	}
}
