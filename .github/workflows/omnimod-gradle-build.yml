name: Gradle Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: build/libs/

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

  release:

    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: build/libs/

      - name: Extract version
        id: get_version
        run: |
          mod_version=$(grep "^mod_version=" gradle.properties | cut -d'=' -f2)
          echo "version=$mod_version" >> $GITHUB_ENV

      - name: Configure Git
        run: |
          COMMITTER_NAME=$(git log -1 --pretty=format:'%an')
          COMMITTER_EMAIL=$(git log -1 --pretty=format:'%ae')
          git config --global user.name "$COMMITTER_NAME"
          git config --global user.email "$COMMITTER_EMAIL"

      - name: Fetch tags
        run: git fetch --tags

      - name: Get latest tag
        id: get_latest_tag
        run: |
          latest_tag=$(git tag -l "v${{ env.version }}-*" --sort=-v:refname | head -n 1)
          if [ -z "$latest_tag" ]; then
            new_tag="v${{ env.version }}-0"
          else
            build_number=$(echo $latest_tag | awk -F'-' '{print $2}')
            if [ -z "$build_number" ]; then
              new_tag="v${{ env.version }}-0"
            else
              new_tag="v${{ env.version }}-$((build_number + 1))"
            fi
          fi
          echo "new_tag=$new_tag" >> $GITHUB_ENV
          echo "Latest tag: $latest_tag"
          echo "New tag: $new_tag"

      - name: Create Git tag
        run: |
          git tag -a "${{ env.new_tag }}" -m "Release version ${{ env.version }}"
          git push origin "${{ env.new_tag }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "${{ env.new_tag }}"
          files: build/libs/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
